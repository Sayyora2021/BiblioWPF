// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BData.Models
{
    public partial class BiblioContext : DbContext
    {
        public BiblioContext()
        {
        }

        public BiblioContext(DbContextOptions<BiblioContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Adresse> Adresse { get; set; }
        public virtual DbSet<Domaine> Domaine { get; set; }
        public virtual DbSet<Emprunter> Emprunter { get; set; }
        public virtual DbSet<Livre> Livre { get; set; }
        public virtual DbSet<Personne> Personne { get; set; }
        public virtual DbSet<Role> Role { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=WIN-D8OI762EF46;Initial Catalog=Bibliotheque;Integrated Security=True;TrustServerCertificate=True", options => options.EnableRetryOnFailure());
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Adresse>(entity =>
            {
                entity.Property(e => e.appartement)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.pays)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.rue)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ville)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.zipCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Domaine>(entity =>
            {
                entity.Property(e => e.description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.nom)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Emprunter>(entity =>
            {
                entity.Property(e => e.dateEmprunt).HasColumnType("date");

                entity.Property(e => e.dateRetour).HasColumnType("date");

                entity.HasOne(d => d.idLecteurNavigation)
                    .WithMany(p => p.Emprunters)
                    .HasForeignKey(d => d.idLecteur)
                    .HasConstraintName("FK__Emprunter__idLec__32E0915F");

                entity.HasOne(d => d.idLivreNavigation)
                    .WithMany(p => p.Emprunters)
                    .HasForeignKey(d => d.idLivre)
                    .HasConstraintName("FK__Emprunter__idLiv__31EC6D26");
            });

            modelBuilder.Entity<Livre>(entity =>
            {
                entity.Property(e => e.tittre)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.HasOne(d => d.idDomaineNavigation)
                    .WithMany(p => p.Livres)
                    .HasForeignKey(d => d.idDomaine)
                    .HasConstraintName("FK__Livre__idDomaine__2E1BDC42");

                entity.HasOne(d => d.idPersonneNavigation)
                    .WithMany(p => p.Livres)
                    .HasForeignKey(d => d.idPersonne)
                    .HasConstraintName("FK__Livre__idPersonn__2F10007B");
            });

            modelBuilder.Entity<Personne>(entity =>
            {
                entity.Property(e => e.email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.grade)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.motDePasse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.nom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.prenom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.idAdresseNavigation)
                    .WithMany(p => p.Personnes)
                    .HasForeignKey(d => d.idAdresse)
                    .HasConstraintName("FK__Personne__idAdre__29572725");

                entity.HasOne(d => d.idRoleNavigation)
                    .WithMany(p => p.Personnes)
                    .HasForeignKey(d => d.idRole)
                    .HasConstraintName("FK__Personne__idRole__286302EC");
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.Property(e => e.nom)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}